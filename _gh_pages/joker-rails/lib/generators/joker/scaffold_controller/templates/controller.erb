class <%= class_name.pluralize %>Controller < ApplicationController
  before_action :set_<%= singular_table_name %>, only: [:show, :edit, :update, :destroy]

  def index
    @<%= plural_table_name %> = <%= class_name %>.all
    @<%= plural_table_name %> = @<%= plural_table_name %>.joker_filter params
    # authorize @<%= plural_table_name %>
  end

  def show
    # authorize @<%= singular_table_name %>
  end

  def new
    @<%= singular_table_name %> = <%= class_name %>.new
    # authorize @<%= singular_table_name %>
  end

  def edit
    # authorize @<%= singular_table_name %>
  end

  def create
    @<%= singular_table_name %> = <%= class_name %>.new <%= singular_table_name %>_params
    # authorize @<%= singular_table_name %>
    if save_with_reflections @<%= singular_table_name %>
      if params[:format] == 'json'
        render json: { status: :OK, callback_name: "App.Controllers.<%= class_name %>.create" }
      else
        redirect_to <%= index_helper %>_path, notice: '<%= human_name %> foi cadastrado com sucesso.'
      end
    else
      return show_errors_for @<%= singular_table_name %>
    end
  end

  def update
    # authorize @<%= singular_table_name %>
    @<%= singular_table_name %>.attributes = <%= "#{singular_table_name}_params" %>
    if update_with_reflections @<%= singular_table_name %>
      if params[:format] == 'json'
        render json: { status: :OK, callback_name: "App.Controllers.<%= class_name %>.update" }
      else
        redirect_to <%= index_helper %>_path, notice: '<%= human_name %> foi editado com sucesso.'
      end
    else
      return show_errors_for @<%= singular_table_name %>
    end
  end

  def destroy
    # authorize @<%= singular_table_name %>
    if @<%= singular_table_name %>.destroy
      if params[:format] == 'json'
        render json: { status: :OK, callback_name: "App.Controllers.<%= class_name %>.destroy" }
      else
        redirect_to <%= index_helper %>_path, notice: '<%= human_name %> foi excluido com sucesso.'
      end
    else
      return show_errors_for @<%= singular_table_name %>
    end
  end

  private
  def set_<%= singular_table_name %>
    @<%= singular_table_name %> = <%= class_name %>.find params[:id]
  end

  def <%= "#{singular_table_name}_params" %>
    params.require(<%= ":#{singular_table_name}" %>).permit(<%= attributes_names.map { |name| ":#{name}" }.join(', ') %>)
  end

end
